from PIL import Image
import os

def encrypt_decrypt_image(input_path, output_path, key):
    try:
        img = Image.open(input_path)
        img = img.convert("RGB")  # Ensure it's in RGB mode
        pixels = img.load()
        for i in range(img.width):
            for j in range(img.height):
                r, g, b = pixels[i, j]
                pixels[i, j] = (r ^ key, g ^ key, b ^ key)
        img.save(output_path)
        print(f"Saved result to: {output_path}")
    except Exception as e:
        print(f"Error: {e}")

def main():
    print("Image Encryption/Decryption Tool")
    input_path = input("Enter path to input image: ")
    if not os.path.exists(input_path):
        print("File not found!")
        return
    output_path = input("Enter output image path (e.g., encrypted.png): ")
    try:
        key = int(input("Enter numeric key (0â€“255): "))
        if not 0 <= key <= 255:
            print("Key must be between 0 and 255.")
            return
    except ValueError:
        print("Key must be a number.")
        return
    encrypt_decrypt_image(input_path, output_path, key)

if __name__ == "__main__":
    main()
